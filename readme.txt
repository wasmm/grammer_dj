  ______________    ________________        __________      _____        _____  _____        _____  __________________   ________________
 /              \   |     _____     \      /          \     |    \      /    |  |    \      /    |  |                 |  |     _____     \
/     ______     |  |     |    \     |    /    ____    \    |     \    /     |  |     \    /     |  |    _________    |  |     |    \     |
|     |     |____|  |     |     |    |   /    /    \    \   |      \  /      |  |      \  /      |  |    |______  |___|  |     |     |    |
|     |   ________  |     |____/     |  /     |____|     \  |       \/       |  |       \/       |  |           \        |     |____/     |
|     |   |__    |  |              _/   |                |  |                |  |                |  |    _______/  ___   |              _/
|     |______|   |  |      |\      \    |     ______     |  |                |  |                |  |    |________|   |  |      |\      \
\                |  |      | \      \   |     |    |     |  |     |\  /|     |  |     |\  /|     |  |                 |  |      | \      \
 \_______________|  |______|  \______\  |_____|    |_____|  |_____| \/ |_____|  |_____| \/ |_____|  |_________________|  |______|  \______\

Python 3.6
Celery
Redis

Инструкция по использованию сервиса
Сервис GRAMMER работает на Python 3.6 с фреймворком Django + Celery + Redis
Для запуска очереди Celery нужно активирвать виртуальное окружение
и выполнить команду:

  celery worker -A grammer --loglevel=debug --concurrency=4

  celery worker -A grammer -l INFO -n work_like_col -Q like_collector --concurrency=10
  celery worker -A grammer -l INFO -n work_like_act -Q like_action --concurrency=10
  celery worker -A grammer -l INFO -n work_foll_col -Q followers_collector --concurrency=10
  celery worker -A grammer -l INFO -n work_foll_act -Q followers_sort --concurrency=10
  celery worker -A grammer -l INFO -n work_foll_add -Q followers_add --concurrency=10

  celery multi start 5 -A grammer -l INFO -с 3 -Q:1 svc_add_follower -Q:2 svc_get_acc_info -Q:3 like_action -Q:4 target_f_add -Q:5 flw_add

 1 worker - svc_add_follower (main.tasks.add_follow)
 2 worker - svc_get_acc_info (main.tasks.get_full_data)
 3 worker - like_action      (main.tasks.scaner_acts_like, main.tasks.like)
 4 worker - target_f_add     (main.tasks.scaner_acts_follow, main.tasks.mas_add_following)
 5 worker - flw_add          (main.tasks.scaner_acts_add_follow, main.tasks.follow_it)










 /etc/init.d/celeryd start
 /etc/init.d/celerybeat start


тогда запустится сервис очередей Celery

Для запуска кронтаба Celery нужно выполнить команду:

  celery -A grammer beat

  /etc/init.d/celerybeat start

Для запуска мониторинга очередей нужно выполнить

  celery -A grammer flower


 Наименование таблицы             |       Описание таблицы
__________________________________|_____________________________________________
 Config_instagram_work            |     Таблица конфигурации работы
                                  |     логики заданий
----------------------------------|---------------------------------------------
 Conn_inst_acc                    |     Таблица подключенных аккаунтов
 ---------------------------------|---------------------------------------------
 Conn_acc_details                 |     Таблица расширенной информации
                                  |     о подключенных аккаунтах
----------------------------------|---------------------------------------------
 Inst_accounts                    |     Таблица логинов инстаграмм аккаунтов,
                                  |     которые связаны с подключенными
                                  |     аккаунтами
----------------------------------|---------------------------------------------
 Conn_inst_followers              |     Таблица подписчиков и подписок
                                  |     подклченных аккаунтов
----------------------------------|---------------------------------------------
 Acts_like                        |     Таблица заданий на масс лайк
----------------------------------|---------------------------------------------
 Acts_follow                      |     Таблица заданий на масс фолловинг
----------------------------------|---------------------------------------------
 Stat                             |     Таблица показателей выполненной работы
----------------------------------|---------------------------------------------
 Notices                          |     Таблица уведомлений для пользователей
----------------------------------|---------------------------------------------
Статусы заданий
 - added       новое задание
 - processing  обработка задания, получение списка подписчиков
 - follows     обработка списка пописчиков, масс фолловинг, пачками по 20 человек
 - processed   задание выполнено

Типы заданий
 - mass_likes      - задание на массовую расстановку лайков
 - mass_follow_acc - задание на сбор акков с целевого аккаунта
 - mass_follow_geo - задание на сбор акков с целевой локации
 - mass_follow_tag - задание на сбор акков с целевого тега

Признаки
 locked
  - True - задание можно обрабатывать,
  - False - задание обрабатывать нельзя, т.к. оно взято в обработку
          другим процессом





Реализация масс лайкинга(разбито на 2 задания)
  ЗАДАНИЕ 1 (collect_for_mass_like):
    Раз в N минут по таблице подключенных инстаграм аккаунтов будет проходить
    задание, которое соберет всех, у кого стоит галка mass_likes будет добавлен
    в задания при условии что у аккаунта нет уже назначенных заданий

  ЗАДАНИЕ 2 (likef):
    Раз в N минут по таблице заданий на масс лайк проходит наше задание и выбирает
    первое попавшееся задание со статусом added, затем выбираются 4 фолловера
    и лайкаются


Реализация масс фолловинга(по таргет аккаунту)


так же в таблицу Acts_follow добавлен признак locked:
    True - задание можно обрабатывать,
    False - задание обрабатывать нельзя, т.к. оно взято в обработку
            другим процессом










КОНЦЕПТ:

задания
 - добавление доп данных
 - добавление подписок и подписчиков
 - сканирование заданий на масс лайк
 - сканирование заданий на масс фолловинг


1. Когда я добавляю новый аккаунт на раскрутку то вызывается задание на
   добавление доп данных, после сохранения доп данных вызывается задание на
   добавление подписок и подписчиков

2. Циклично работает задание, которое получает список аккаунтов со включенным
   параметром масс лайкинга, и добавляет задания на масс лайкинг,
   если их не было или есть уже отработанные задания

3. Циклично работает задание, которое получает список заданий на масс лайкинг
   со статусом added и запускает задание масс лайкинга, передавая ему логин
   или ИД

   (как вариант можно обрабатывать так: выбирать третьим шагом по три задания и
    менять им признак Locked на True, на save и смену признака повесить сигнал
    запуска масс лайкинга, в таком случаена масс лайкинг оддновременно
    будет уходить по 3 аккаута)


















№
